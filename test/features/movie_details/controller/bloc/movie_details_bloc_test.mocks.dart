// Mocks generated by Mockito 5.4.4 from annotations
// in movie_app_valu/test/features/movie_details/controller/bloc/movie_details_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie_app_valu/core/network/failure_model.dart' as _i5;
import 'package:movie_app_valu/core/network/generic_response.dart' as _i6;
import 'package:movie_app_valu/features/movie_details/data/models/movie_details.dart'
    as _i7;
import 'package:movie_app_valu/features/movie_details/data/repository/movie_details_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BaseMovieDetailsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseMovieDetailsRepository extends _i1.Mock
    implements _i3.BaseMovieDetailsRepository {
  @override
  _i4.Future<
      _i2.Either<
          _i5.ApiErrorModel,
          _i6.ApiResponse<
              _i7.MovieDetails>>> getMovieDetails({required int? movieId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetails,
          [],
          {#movieId: movieId},
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.ApiErrorModel,
                    _i6.ApiResponse<_i7.MovieDetails>>>.value(
            _FakeEither_0<_i5.ApiErrorModel, _i6.ApiResponse<_i7.MovieDetails>>(
          this,
          Invocation.method(
            #getMovieDetails,
            [],
            {#movieId: movieId},
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Either<_i5.ApiErrorModel,
                    _i6.ApiResponse<_i7.MovieDetails>>>.value(
            _FakeEither_0<_i5.ApiErrorModel, _i6.ApiResponse<_i7.MovieDetails>>(
          this,
          Invocation.method(
            #getMovieDetails,
            [],
            {#movieId: movieId},
          ),
        )),
      ) as _i4.Future<
          _i2.Either<_i5.ApiErrorModel, _i6.ApiResponse<_i7.MovieDetails>>>);
}
